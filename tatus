[1mdiff --git a/src/components/button/index copy.js b/src/components/button/index copy.js[m
[1mdeleted file mode 100644[m
[1mindex 0cfc4f3..0000000[m
[1m--- a/src/components/button/index copy.js[m	
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-import Component from "../../utils/component";[m
[31m-import { wrapFunction, stringifyProps } from "../../utils";[m
[31m-import "./index.css";[m
[31m-[m
[31m-export default class Button extends Component {[m
[31m-  render() {[m
[31m-    const { className, title, variant, children, clickHandler, ...rest } = this.state;[m
[31m-[m
[31m-    return `[m
[31m-    <button  [m
[31m-    class="button ${variant ? `button_${variant}` : ""} ${className || ""}" [m
[31m-    ${clickHandler ? `onclick="${wrapFunction(clickHandler)}"` : ""}[m
[31m-    ${stringifyProps(rest)}>[m
[31m-      ${children || title || ""}[m
[31m-    </button>`;[m
[31m-  }[m
[31m-}[m
[1mdiff --git a/src/utils/component.js b/src/utils/component.js[m
[1mindex 3e024e9..695ba5f 100644[m
[1m--- a/src/utils/component.js[m
[1m+++ b/src/utils/component.js[m
[36m@@ -13,7 +13,7 @@[m [mimport Dom from "./dom";[m
 //              1           2                3         4                5[m
 // re =      <(Tag) (props=" props" )/> | <(Tag) (props = "props" )>(children)</Tag>[m
 const re = /<([A-Z][A-Za-z0-9._]+)([^>]*)\/>|<(?<tag>[A-Z][A-Za-z0-9._]+)([^>]*)>(.*?)<\/\k<tag>\s?>|context:(\d+)/;[m
[31m-const ternaryOperatorRe = /\{\{\s*([^}]*)\?(?!\.)(.*?)\s*:\s*(.*?)\s*\}\}/g;[m
[32m+[m[32mconst ternaryOperatorRe = /\{\{\s*([^}]*)\?(?!\.)(.*)\s*:\s*(.*)\s*\}\}/g;[m
 [m
 const propsRegexp = /(\w+)\s*=\s*((?<quote>["'`])(.*?)\k<quote>|context:(\d+))|(\w+)/g;[m
 const components = new Map();[m
[36m@@ -130,13 +130,14 @@[m [mexport default class Component {[m
       return result.replace(/null|undefined/g, "");[m
     });[m
 [m
[31m-    return template.replace(/\{\{([A-Za-z0-9._-]+)\}\}/g, (match, key) => {[m
[32m+[m[32m    return template.replace(/\{\{\s*([^}]+)\s*\}\}/g, (match, key) => {[m
       const value = getValue(key, this.state);[m
 [m
       // eslint-disable-next-line eqeqeq[m
       if (value == undefined || value == null) {[m
[31m-        return "";[m
[32m+[m[32m        return `${value}`.replace(/null|undefined/g, "");[m
       }[m
[32m+[m
       if (isPrimitive(value)) {[m
         return value;[m
       }[m
[1mdiff --git a/src/utils/index.js b/src/utils/index.js[m
[1mindex 84f3515..f8fb005 100644[m
[1m--- a/src/utils/index.js[m
[1m+++ b/src/utils/index.js[m
[36m@@ -17,12 +17,6 @@[m [mlet id = 1;[m
 // eslint-disable-next-line no-plusplus[m
 const nextId = () => id++;[m
 [m
[31m-const wrapFunction = (f) => {[m
[31m-  const id = uid();[m
[31m-  const functionAlias = `functionId${id}`;[m
[31m-  window[functionAlias] = f;[m
[31m-  return `${functionAlias}(this)`;[m
[31m-};[m
 [m
 const stringifyProps = (props, keys = false) =>[m
   Object.entries(props)[m
[36m@@ -55,4 +49,4 @@[m [mconst emit = (key, payload) => {[m
 [m
 const useEventBus = [on, emit];[m
 [m
[31m-export { wrapFunction, uid, nextId, goToElementHref, stringifyProps, getContext, setContext, useEventBus };[m
[32m+[m[32mexport { uid, nextId, goToElementHref, stringifyProps, getContext, setContext, useEventBus };[m
